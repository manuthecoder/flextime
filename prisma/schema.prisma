generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model FlexChoice {
  id    Int     @id @default(autoincrement())
  name  String? @db.VarChar(300)
  email String? @db.VarChar(300)

  displayOnList     Boolean?      @default(true)
  appointments      Appointment[]
  maxAppointments   Int?          @default(25) @db.Int
  appointmentBanner String?       @db.VarChar(300)
}

model Appointment {
  id         Int        @id @default(autoincrement())
  flex       Int
  flexChoice FlexChoice @relation(fields: [flex], references: [id])

  studentName  String
  studentEmail String
  comment      String?  @db.VarChar(300)
  date         DateTime @db.DateTime

  teacherCreated Boolean @default(false)
}
